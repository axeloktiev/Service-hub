name: docker-compose-actions-workflow

on: push

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

  client-dependencies:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: ./client/node_modules
          key: node-modules-${{ hashFiles('./client/yarn.lock') }}

#      - name: Get changed files
#        id: changed-files
#        uses: tj-actions/changed-files@v13.1
#      - name: List all changed files
#        run: |
#          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
#            echo "$file was changed"
#          done

      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn --modules-folder ./client install

  client-linter:
    needs: [setup, client-dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore cached Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: ./client/node_modules
          key: node-modules-${{ hashFiles('./client/yarn.lock') }}

      - name: Run Linter
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn --cwd ./client lint

  client-build:
    needs: [setup, client-dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore cached Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: ./client/node_modules
          key: node-modules-${{ hashFiles('./client/yarn.lock') }}

      - name: Client build
        run: yarn --cwd ./client build

#  client-lighthouse:
#    needs: [client-dependencies, client-build]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Run Lighthouse CI
#        run: |
#            yarn global add @lhci/cli@0.3.x
#            lhci autorun
#        env:
#          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  docker-run:
    needs: client-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the stack
        run: yarn dev:up
